

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Jun 17 23:13:19 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19     0000                     
    20                           ; Generated 22/03/2023 GMT
    21                           ; 
    22                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F877A Definitions
    52                           ; 
    53                           ; SFR Addresses
    54     0000                     	;# 
    55     0001                     	;# 
    56     0002                     	;# 
    57     0003                     	;# 
    58     0004                     	;# 
    59     0005                     	;# 
    60     0006                     	;# 
    61     0007                     	;# 
    62     0008                     	;# 
    63     0009                     	;# 
    64     000A                     	;# 
    65     000B                     	;# 
    66     000C                     	;# 
    67     000D                     	;# 
    68     000E                     	;# 
    69     000E                     	;# 
    70     000F                     	;# 
    71     0010                     	;# 
    72     0011                     	;# 
    73     0012                     	;# 
    74     0013                     	;# 
    75     0014                     	;# 
    76     0015                     	;# 
    77     0015                     	;# 
    78     0016                     	;# 
    79     0017                     	;# 
    80     0018                     	;# 
    81     0019                     	;# 
    82     001A                     	;# 
    83     001B                     	;# 
    84     001B                     	;# 
    85     001C                     	;# 
    86     001D                     	;# 
    87     001E                     	;# 
    88     001F                     	;# 
    89     0081                     	;# 
    90     0085                     	;# 
    91     0086                     	;# 
    92     0087                     	;# 
    93     0088                     	;# 
    94     0089                     	;# 
    95     008C                     	;# 
    96     008D                     	;# 
    97     008E                     	;# 
    98     0091                     	;# 
    99     0092                     	;# 
   100     0093                     	;# 
   101     0094                     	;# 
   102     0098                     	;# 
   103     0099                     	;# 
   104     009C                     	;# 
   105     009D                     	;# 
   106     009E                     	;# 
   107     009F                     	;# 
   108     010C                     	;# 
   109     010D                     	;# 
   110     010E                     	;# 
   111     010F                     	;# 
   112     018C                     	;# 
   113     018D                     	;# 
   114     0000                     	;# 
   115     0001                     	;# 
   116     0002                     	;# 
   117     0003                     	;# 
   118     0004                     	;# 
   119     0005                     	;# 
   120     0006                     	;# 
   121     0007                     	;# 
   122     0008                     	;# 
   123     0009                     	;# 
   124     000A                     	;# 
   125     000B                     	;# 
   126     000C                     	;# 
   127     000D                     	;# 
   128     000E                     	;# 
   129     000E                     	;# 
   130     000F                     	;# 
   131     0010                     	;# 
   132     0011                     	;# 
   133     0012                     	;# 
   134     0013                     	;# 
   135     0014                     	;# 
   136     0015                     	;# 
   137     0015                     	;# 
   138     0016                     	;# 
   139     0017                     	;# 
   140     0018                     	;# 
   141     0019                     	;# 
   142     001A                     	;# 
   143     001B                     	;# 
   144     001B                     	;# 
   145     001C                     	;# 
   146     001D                     	;# 
   147     001E                     	;# 
   148     001F                     	;# 
   149     0081                     	;# 
   150     0085                     	;# 
   151     0086                     	;# 
   152     0087                     	;# 
   153     0088                     	;# 
   154     0089                     	;# 
   155     008C                     	;# 
   156     008D                     	;# 
   157     008E                     	;# 
   158     0091                     	;# 
   159     0092                     	;# 
   160     0093                     	;# 
   161     0094                     	;# 
   162     0098                     	;# 
   163     0099                     	;# 
   164     009C                     	;# 
   165     009D                     	;# 
   166     009E                     	;# 
   167     009F                     	;# 
   168     010C                     	;# 
   169     010D                     	;# 
   170     010E                     	;# 
   171     010F                     	;# 
   172     018C                     	;# 
   173     018D                     	;# 
   174                           
   175                           	psect	idataCOMMON
   176     00AF                     __pidataCOMMON:
   177                           
   178                           ;initializer for _str
   179     00AF  3401               	retlw	low ((STR_1-__stringbase)| (0+32768))
   180     000C                     _PIR1bits	set	12
   181     001A                     _RCREG	set	26
   182     0019                     _TXREG	set	25
   183     0018                     _RCSTA	set	24
   184     0065                     _RCIF	set	101
   185     0064                     _TXIF	set	100
   186     00C4                     _CREN	set	196
   187     005F                     _GIE	set	95
   188     005E                     _PEIE	set	94
   189     00C7                     _SPEN	set	199
   190     0088                     _TRISD	set	136
   191     0098                     _TXSTA	set	152
   192     0099                     _SPBRG	set	153
   193     0465                     _RCIE	set	1125
   194     043F                     _TRISC7	set	1087
   195     043E                     _TRISC6	set	1086
   196     04C4                     _SYNC	set	1220
   197     04C2                     _BRGH	set	1218
   198                           
   199                           	psect	strings
   200     0084                     __pstrings:
   201     0084                     stringtab:
   202     0084                     __stringtab:
   203     0084                     stringcode:	
   204                           ;	String table - string pointers are 1 byte each
   205                           
   206     0084                     stringdir:
   207     0084  3000               	movlw	high stringdir
   208     0085  008A               	movwf	10
   209     0086  0804               	movf	4,w
   210     0087  0A84               	incf	4,f
   211     0088  0782               	addwf	2,f
   212     0089                     __stringbase:
   213     0089  3400               	retlw	0
   214     008A                     __end_of__stringtab:
   215     008A                     STR_1:
   216     008A  344F               	retlw	79	;'O'
   217     008B  346C               	retlw	108	;'l'
   218     008C  3461               	retlw	97	;'a'
   219     008D  3420               	retlw	32	;' '
   220     008E  344D               	retlw	77	;'M'
   221     008F  3475               	retlw	117	;'u'
   222     0090  346E               	retlw	110	;'n'
   223     0091  3464               	retlw	100	;'d'
   224     0092  346F               	retlw	111	;'o'
   225     0093  3400               	retlw	0
   226                           
   227                           	psect	cinit
   228     000F                     start_initialization:	
   229                           ; #config settings
   230                           
   231     000F                     __initialization:
   232                           
   233                           ; Initialize objects allocated to COMMON
   234     000F  120A  118A  20AF  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   235     0014  00FB               	movwf	__pdataCOMMON& (0+127)
   236                           
   237                           ; Clear objects allocated to COMMON
   238     0015  01FA               	clrf	__pbssCOMMON& (0+127)
   239     0016                     end_of_initialization:	
   240                           ;End of C runtime variable initialization code
   241                           
   242     0016                     __end_of__initialization:
   243     0016  0183               	clrf	3
   244     0017  120A  118A  2848   	ljmp	_main	;jump to C main() function
   245                           
   246                           	psect	bssCOMMON
   247     007A                     __pbssCOMMON:
   248     007A                     _UART_RX_Buffer:
   249     007A                     	ds	1
   250                           
   251                           	psect	dataCOMMON
   252     007B                     __pdataCOMMON:
   253     007B                     _str:
   254     007B                     	ds	1
   255                           
   256                           	psect	cstackCOMMON
   257     0070                     __pcstackCOMMON:
   258     0070                     ?_UART_Init:
   259     0070                     ?_UART_Transmit_Char:	
   260                           ; 1 bytes @ 0x0
   261                           
   262     0070                     ?_ISR:	
   263                           ; 1 bytes @ 0x0
   264                           
   265     0070                     ??_ISR:	
   266                           ; 1 bytes @ 0x0
   267                           
   268     0070                     ?_main:	
   269                           ; 1 bytes @ 0x0
   270                           
   271                           
   272                           ; 1 bytes @ 0x0
   273     0070                     	ds	2
   274     0072                     ??_UART_Init:
   275     0072                     ??_UART_Transmit_Char:	
   276                           ; 1 bytes @ 0x2
   277                           
   278     0072                     UART_Transmit_Char@a:	
   279                           ; 1 bytes @ 0x2
   280                           
   281                           
   282                           ; 1 bytes @ 0x2
   283     0072                     	ds	1
   284     0073                     ?_UART_Transmit_String:
   285     0073                     UART_Transmit_String@size:	
   286                           ; 1 bytes @ 0x3
   287                           
   288                           
   289                           ; 2 bytes @ 0x3
   290     0073                     	ds	2
   291     0075                     ??_UART_Transmit_String:
   292                           
   293                           ; 1 bytes @ 0x5
   294     0075                     	ds	2
   295     0077                     UART_Transmit_String@a:
   296                           
   297                           ; 1 bytes @ 0x7
   298     0077                     	ds	1
   299     0078                     UART_Transmit_String@i:
   300                           
   301                           ; 2 bytes @ 0x8
   302     0078                     	ds	2
   303                           
   304                           	psect	cstackBANK0
   305     0020                     __pcstackBANK0:
   306     0020                     ??_main:
   307                           
   308                           ; 1 bytes @ 0x0
   309     0020                     	ds	3
   310                           
   311                           	psect	maintext
   312     0048                     __pmaintext:	
   313 ;;
   314 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   315 ;;
   316 ;; *************** function _main *****************
   317 ;; Defined at:
   318 ;;		line 81 in file "newmain.c"
   319 ;; Parameters:    Size  Location     Type
   320 ;;		None
   321 ;; Auto vars:     Size  Location     Type
   322 ;;  get             1    0        unsigned char 
   323 ;; Return value:  Size  Location     Type
   324 ;;                  1    wreg      void 
   325 ;; Registers used:
   326 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   327 ;; Tracked objects:
   328 ;;		On entry : B00/0
   329 ;;		On exit  : 0/0
   330 ;;		Unchanged: 0/0
   331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   332 ;;      Params:         0       0       0       0       0
   333 ;;      Locals:         0       0       0       0       0
   334 ;;      Temps:          0       3       0       0       0
   335 ;;      Totals:         0       3       0       0       0
   336 ;;Total ram usage:        3 bytes
   337 ;; Hardware stack levels required when called: 3
   338 ;; This function calls:
   339 ;;		_UART_Init
   340 ;;		_UART_Transmit_String
   341 ;; This function is called by:
   342 ;;		Startup code after reset
   343 ;; This function uses a non-reentrant model
   344 ;;
   345                           
   346     0048                     _main:	
   347                           ;psect for function _main
   348                           
   349     0048                     l746:	
   350                           ;incstack = 0
   351                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   352                           
   353     0048  1683               	bsf	3,5	;RP0=1, select bank1
   354     0049  1303               	bcf	3,6	;RP1=0, select bank1
   355     004A  1707               	bsf	7,6	;volatile
   356     004B  1787               	bsf	7,7	;volatile
   357     004C                     l748:
   358     004C  0188               	clrf	8	;volatile
   359     004D                     l750:
   360     004D  120A  118A  206E  120A  118A  	fcall	_UART_Init
   361     0052                     l752:
   362     0052  300A               	movlw	10
   363     0053  00F3               	movwf	UART_Transmit_String@size
   364     0054  3000               	movlw	0
   365     0055  00F4               	movwf	UART_Transmit_String@size+1
   366     0056  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   367     0057  120A  118A  201A  120A  118A  	fcall	_UART_Transmit_String
   368     005C                     l754:
   369     005C  304D               	movlw	77
   370     005D  1283               	bcf	3,5	;RP0=0, select bank0
   371     005E  1303               	bcf	3,6	;RP1=0, select bank0
   372     005F  00A2               	movwf	??_main+2
   373     0060  3019               	movlw	25
   374     0061  00A1               	movwf	??_main+1
   375     0062  304F               	movlw	79
   376     0063  00A0               	movwf	??_main
   377     0064                     u67:
   378     0064  0BA0               	decfsz	??_main,f
   379     0065  2864               	goto	u67
   380     0066  0BA1               	decfsz	??_main+1,f
   381     0067  2864               	goto	u67
   382     0068  0BA2               	decfsz	??_main+2,f
   383     0069  2864               	goto	u67
   384     006A  2852               	goto	l752
   385     006B  120A  118A  280C   	ljmp	start
   386     006E                     __end_of_main:
   387                           
   388                           	psect	text1
   389     001A                     __ptext1:	
   390 ;; *************** function _UART_Transmit_String *****************
   391 ;; Defined at:
   392 ;;		line 56 in file "newmain.c"
   393 ;; Parameters:    Size  Location     Type
   394 ;;  a               1    wreg     PTR unsigned char 
   395 ;;		 -> STR_1(10), 
   396 ;;  size            2    3[COMMON] int 
   397 ;; Auto vars:     Size  Location     Type
   398 ;;  a               1    7[COMMON] PTR unsigned char 
   399 ;;		 -> STR_1(10), 
   400 ;;  i               2    8[COMMON] int 
   401 ;; Return value:  Size  Location     Type
   402 ;;                  1    wreg      void 
   403 ;; Registers used:
   404 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   405 ;; Tracked objects:
   406 ;;		On entry : 0/0
   407 ;;		On exit  : 0/0
   408 ;;		Unchanged: 0/0
   409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   410 ;;      Params:         2       0       0       0       0
   411 ;;      Locals:         3       0       0       0       0
   412 ;;      Temps:          2       0       0       0       0
   413 ;;      Totals:         7       0       0       0       0
   414 ;;Total ram usage:        7 bytes
   415 ;; Hardware stack levels used: 1
   416 ;; Hardware stack levels required when called: 2
   417 ;; This function calls:
   418 ;;		_UART_Transmit_Char
   419 ;; This function is called by:
   420 ;;		_main
   421 ;; This function uses a non-reentrant model
   422 ;;
   423                           
   424     001A                     _UART_Transmit_String:	
   425                           ;psect for function _UART_Transmit_String
   426                           
   427                           
   428                           ;incstack = 0
   429                           ; Regs used in _UART_Transmit_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   430                           ;UART_Transmit_String@a stored from wreg
   431     001A  00F7               	movwf	UART_Transmit_String@a
   432     001B                     l736:
   433                           
   434                           ;newmain.c: 56: };newmain.c: 57: ;newmain.c: 58: uint8_t UART_RX_Buffer = 0;
   435     001B  01F8               	clrf	UART_Transmit_String@i
   436     001C  01F9               	clrf	UART_Transmit_String@i+1
   437     001D  2839               	goto	l744
   438     001E                     l738:
   439                           
   440                           ;newmain.c: 59: void __attribute__((picinterrupt(("")))) ISR(){
   441     001E  0878               	movf	UART_Transmit_String@i,w
   442     001F  0777               	addwf	UART_Transmit_String@a,w
   443     0020  0084               	movwf	4
   444     0021  120A  118A  2084  120A  118A  	fcall	stringdir
   445     0026  120A  118A  20A4  120A  118A  	fcall	_UART_Transmit_Char
   446     002B                     l740:
   447                           
   448                           ;newmain.c: 60:     if(PIR1bits.RCIF == 1){
   449     002B  3007               	movlw	7
   450     002C  00F6               	movwf	??_UART_Transmit_String+1
   451     002D  307D               	movlw	125
   452     002E  00F5               	movwf	??_UART_Transmit_String
   453     002F                     u77:
   454     002F  0BF5               	decfsz	??_UART_Transmit_String,f
   455     0030  282F               	goto	u77
   456     0031  0BF6               	decfsz	??_UART_Transmit_String+1,f
   457     0032  282F               	goto	u77
   458     0033                     l742:
   459                           
   460                           ;newmain.c: 61:         UART_RX_Buffer = RCREG;
   461     0033  3001               	movlw	1
   462     0034  07F8               	addwf	UART_Transmit_String@i,f
   463     0035  1803               	skipnc
   464     0036  0AF9               	incf	UART_Transmit_String@i+1,f
   465     0037  3000               	movlw	0
   466     0038  07F9               	addwf	UART_Transmit_String@i+1,f
   467     0039                     l744:
   468     0039  0879               	movf	UART_Transmit_String@i+1,w
   469     003A  3A80               	xorlw	128
   470     003B  00F5               	movwf	??_UART_Transmit_String
   471     003C  0874               	movf	UART_Transmit_String@size+1,w
   472     003D  3A80               	xorlw	128
   473     003E  0275               	subwf	??_UART_Transmit_String,w
   474     003F  1D03               	skipz
   475     0040  2843               	goto	u55
   476     0041  0873               	movf	UART_Transmit_String@size,w
   477     0042  0278               	subwf	UART_Transmit_String@i,w
   478     0043                     u55:
   479     0043  1C03               	skipc
   480     0044  2846               	goto	u51
   481     0045  2847               	goto	u50
   482     0046                     u51:
   483     0046  281E               	goto	l738
   484     0047                     u50:
   485     0047                     l56:
   486     0047  0008               	return
   487     0048                     __end_of_UART_Transmit_String:
   488                           
   489                           	psect	text2
   490     00A4                     __ptext2:	
   491 ;; *************** function _UART_Transmit_Char *****************
   492 ;; Defined at:
   493 ;;		line 50 in file "newmain.c"
   494 ;; Parameters:    Size  Location     Type
   495 ;;  a               1    wreg     unsigned char 
   496 ;; Auto vars:     Size  Location     Type
   497 ;;  a               1    2[COMMON] unsigned char 
   498 ;; Return value:  Size  Location     Type
   499 ;;                  1    wreg      void 
   500 ;; Registers used:
   501 ;;		wreg
   502 ;; Tracked objects:
   503 ;;		On entry : 0/0
   504 ;;		On exit  : 0/0
   505 ;;		Unchanged: 0/0
   506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   507 ;;      Params:         0       0       0       0       0
   508 ;;      Locals:         1       0       0       0       0
   509 ;;      Temps:          0       0       0       0       0
   510 ;;      Totals:         1       0       0       0       0
   511 ;;Total ram usage:        1 bytes
   512 ;; Hardware stack levels used: 1
   513 ;; Hardware stack levels required when called: 1
   514 ;; This function calls:
   515 ;;		Nothing
   516 ;; This function is called by:
   517 ;;		_UART_Transmit_String
   518 ;; This function uses a non-reentrant model
   519 ;;
   520                           
   521     00A4                     _UART_Transmit_Char:	
   522                           ;psect for function _UART_Transmit_Char
   523                           
   524                           
   525                           ;incstack = 0
   526                           ; Regs used in _UART_Transmit_Char: [wreg]
   527                           ;UART_Transmit_Char@a stored from wreg
   528     00A4  00F2               	movwf	UART_Transmit_Char@a
   529     00A5                     l672:
   530                           
   531                           ;newmain.c: 50: ;newmain.c: 51: unsigned char UART_Receive();newmain.c: 52: {
   532     00A5  0872               	movf	UART_Transmit_Char@a,w
   533     00A6  1283               	bcf	3,5	;RP0=0, select bank0
   534     00A7  1303               	bcf	3,6	;RP1=0, select bank0
   535     00A8  0099               	movwf	25	;volatile
   536     00A9                     l47:	
   537                           ;newmain.c: 53:     while(!RCIF);
   538                           
   539     00A9  1E0C               	btfss	12,4	;volatile
   540     00AA  28AC               	goto	u11
   541     00AB  28AD               	goto	u10
   542     00AC                     u11:
   543     00AC  28A9               	goto	l47
   544     00AD                     u10:
   545     00AD                     l49:
   546                           
   547                           ;newmain.c: 54:     RCIF=0;
   548     00AD  120C               	bcf	12,4	;volatile
   549     00AE                     l50:
   550     00AE  0008               	return
   551     00AF                     __end_of_UART_Transmit_Char:
   552                           
   553                           	psect	text3
   554     006E                     __ptext3:	
   555 ;; *************** function _UART_Init *****************
   556 ;; Defined at:
   557 ;;		line 38 in file "newmain.c"
   558 ;; Parameters:    Size  Location     Type
   559 ;;		None
   560 ;; Auto vars:     Size  Location     Type
   561 ;;		None
   562 ;; Return value:  Size  Location     Type
   563 ;;                  1    wreg      void 
   564 ;; Registers used:
   565 ;;		wreg
   566 ;; Tracked objects:
   567 ;;		On entry : 0/0
   568 ;;		On exit  : 0/0
   569 ;;		Unchanged: 0/0
   570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   571 ;;      Params:         0       0       0       0       0
   572 ;;      Locals:         0       0       0       0       0
   573 ;;      Temps:          0       0       0       0       0
   574 ;;      Totals:         0       0       0       0       0
   575 ;;Total ram usage:        0 bytes
   576 ;; Hardware stack levels used: 1
   577 ;; Hardware stack levels required when called: 1
   578 ;; This function calls:
   579 ;;		Nothing
   580 ;; This function is called by:
   581 ;;		_main
   582 ;; This function uses a non-reentrant model
   583 ;;
   584                           
   585     006E                     _UART_Init:	
   586                           ;psect for function _UART_Init
   587                           
   588     006E                     l674:	
   589                           ;incstack = 0
   590                           ; Regs used in _UART_Init: [wreg]
   591                           
   592                           
   593                           ;newmain.c: 40:     while(!TXIF);
   594     006E  3020               	movlw	32
   595     006F  1683               	bsf	3,5	;RP0=1, select bank1
   596     0070  1303               	bcf	3,6	;RP1=0, select bank1
   597     0071  0098               	movwf	24	;volatile
   598                           
   599                           ;newmain.c: 41:     TXIF = 0;
   600     0072  3090               	movlw	144
   601     0073  1283               	bcf	3,5	;RP0=0, select bank0
   602     0074  1303               	bcf	3,6	;RP1=0, select bank0
   603     0075  0098               	movwf	24	;volatile
   604                           
   605                           ;newmain.c: 42: }
   606     0076  3020               	movlw	32
   607     0077  1683               	bsf	3,5	;RP0=1, select bank1
   608     0078  1303               	bcf	3,6	;RP1=0, select bank1
   609     0079  0099               	movwf	25	;volatile
   610     007A                     l676:
   611                           
   612                           ;newmain.c: 43: void UART_Transmit_String(unsigned char *a,int size)
   613     007A  1283               	bcf	3,5	;RP0=0, select bank0
   614     007B  1303               	bcf	3,6	;RP1=0, select bank0
   615     007C  120C               	bcf	12,4	;volatile
   616     007D                     l678:
   617                           
   618                           ;newmain.c: 44: {
   619     007D  128C               	bcf	12,5	;volatile
   620     007E                     l680:
   621                           
   622                           ;newmain.c: 45:     for(int i = 0; i < size; i++){
   623     007E  1683               	bsf	3,5	;RP0=1, select bank1
   624     007F  1303               	bcf	3,6	;RP1=0, select bank1
   625     0080  168C               	bsf	12,5	;volatile
   626     0081                     l682:
   627                           
   628                           ;newmain.c: 46:         UART_Transmit_Char(a[i]);
   629     0081  170B               	bsf	11,6	;volatile
   630     0082                     l684:
   631                           
   632                           ;newmain.c: 47:         _delay((unsigned long)((1)*(20000000/4000.0)));
   633     0082  178B               	bsf	11,7	;volatile
   634     0083                     l44:
   635     0083  0008               	return
   636     0084                     __end_of_UART_Init:
   637                           
   638                           	psect	text4
   639     0094                     __ptext4:	
   640 ;; *************** function _ISR *****************
   641 ;; Defined at:
   642 ;;		line 72 in file "newmain.c"
   643 ;; Parameters:    Size  Location     Type
   644 ;;		None
   645 ;; Auto vars:     Size  Location     Type
   646 ;;		None
   647 ;; Return value:  Size  Location     Type
   648 ;;                  1    wreg      void 
   649 ;; Registers used:
   650 ;;		wreg
   651 ;; Tracked objects:
   652 ;;		On entry : 0/0
   653 ;;		On exit  : 0/0
   654 ;;		Unchanged: 0/0
   655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   656 ;;      Params:         0       0       0       0       0
   657 ;;      Locals:         0       0       0       0       0
   658 ;;      Temps:          2       0       0       0       0
   659 ;;      Totals:         2       0       0       0       0
   660 ;;Total ram usage:        2 bytes
   661 ;; Hardware stack levels used: 1
   662 ;; This function calls:
   663 ;;		Nothing
   664 ;; This function is called by:
   665 ;;		Interrupt level 1
   666 ;; This function uses a non-reentrant model
   667 ;;
   668                           
   669     0094                     _ISR:	
   670                           ;psect for function _ISR
   671                           
   672     0094                     i1l722:
   673                           
   674                           ;newmain.c: 73:   UART_Init();
   675     0094  1283               	bcf	3,5	;RP0=0, select bank0
   676     0095  1303               	bcf	3,6	;RP1=0, select bank0
   677     0096  1E8C               	btfss	12,5	;volatile
   678     0097  2899               	goto	u4_21
   679     0098  289A               	goto	u4_20
   680     0099                     u4_21:
   681     0099  289D               	goto	i1l70
   682     009A                     u4_20:
   683     009A                     i1l724:
   684                           
   685                           ;newmain.c: 74:   while(1)
   686     009A  081A               	movf	26,w	;volatile
   687     009B  00FA               	movwf	_UART_RX_Buffer
   688                           
   689                           ;newmain.c: 75:   {
   690     009C  080C               	movf	12,w	;volatile
   691     009D                     i1l70:
   692     009D  0871               	movf	??_ISR+1,w
   693     009E  008A               	movwf	10
   694     009F  0E70               	swapf	??_ISR,w
   695     00A0  0083               	movwf	3
   696     00A1  0EFE               	swapf	btemp,f
   697     00A2  0E7E               	swapf	btemp,w
   698     00A3  0009               	retfie
   699     00A4                     __end_of_ISR:
   700     007E                     btemp	set	126	;btemp
   701     007E                     wtemp0	set	126
   702                           
   703                           	psect	intentry
   704     0004                     __pintentry:	
   705                           ;incstack = 0
   706                           ; Regs used in _ISR: [wreg]
   707                           
   708     0004                     interrupt_function:
   709     007E                     saved_w	set	btemp
   710     0004  00FE               	movwf	btemp
   711     0005  0E03               	swapf	3,w
   712     0006  00F0               	movwf	??_ISR
   713     0007  080A               	movf	10,w
   714     0008  00F1               	movwf	??_ISR+1
   715     0009  120A  118A  2894   	ljmp	_ISR
   716                           
   717                           	psect	config
   718                           
   719                           ;Config register CONFIG @ 0x2007
   720                           ;	Oscillator Selection bits
   721                           ;	FOSC = HS, HS oscillator
   722                           ;	Watchdog Timer Enable bit
   723                           ;	WDTE = OFF, WDT disabled
   724                           ;	Power-up Timer Enable bit
   725                           ;	PWRTE = OFF, PWRT disabled
   726                           ;	Brown-out Reset Enable bit
   727                           ;	BOREN = ON, BOR enabled
   728                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   729                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   730                           ;	Data EEPROM Memory Code Protection bit
   731                           ;	CPD = OFF, Data EEPROM code protection off
   732                           ;	Flash Program Memory Write Enable bits
   733                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   734                           ;	In-Circuit Debugger Mode bit
   735                           ;	DEBUG = 0x1, unprogrammed default
   736                           ;	Flash Program Memory Code Protection bit
   737                           ;	CP = OFF, Code protection off
   738     2007                     	org	8199
   739     2007  3F7A               	dw	16250

Data Sizes:
    Strings     10
    Constant    0
    Data        1
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80      3       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    str	PTR unsigned char  size(1) Largest target is 10
		 -> STR_1(CODE[10]), 

    UART_Transmit_String@a	PTR unsigned char  size(1) Largest target is 10
		 -> STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    _main->_UART_Transmit_String
    _UART_Transmit_String->_UART_Transmit_Char

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     214
                                              0 BANK0      3     3      0
                          _UART_Init
               _UART_Transmit_String
 ---------------------------------------------------------------------------------
 (1) _UART_Transmit_String                                 7     5      2     214
                                              3 COMMON     7     5      2
                 _UART_Transmit_Char
 ---------------------------------------------------------------------------------
 (2) _UART_Transmit_Char                                   1     1      0      15
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Init
   _UART_Transmit_String
     _UART_Transmit_Char

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      3       3       5        3.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       F      12        0.0%
ABS                  0      0       F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Jun 17 23:13:19 2024

                           pc 0002                            l50 00AE                            l44 0083  
                          l47 00A9                            l56 0047                            l49 00AD  
                          u10 00AD                            u11 00AC                            u50 0047  
                          u51 0046                            u55 0043                            u67 0064  
                          u77 002F                            fsr 0004                           l740 002B  
                         l742 0033                           l750 004D                           l680 007E  
                         l672 00A5                           l744 0039                           l736 001B  
                         l752 0052                           l682 0081                           l674 006E  
                         l738 001E                           l754 005C                           l746 0048  
                         l684 0082                           l676 007A                           l748 004C  
                         l678 007D                           _GIE 005F                           _ISR 0094  
                         fsr0 0004                           _str 007B                          ?_ISR 0070  
                        STR_1 008A                          _BRGH 04C2                          _CREN 00C4  
                        _PEIE 005E                          _RCIE 0465                          _RCIF 0065  
                        i1l70 009D                          _SPEN 00C7                          _TXIF 0064  
                        _SYNC 04C4                          u4_20 009A                          u4_21 0099  
                        _main 0048                          btemp 007E                          start 000C  
  __end_of_UART_Transmit_Char 00AF                         ??_ISR 0070                         ?_main 0070  
                       i1l722 0094                         i1l724 009A                         _RCREG 001A  
                       _RCSTA 0018                         _SPBRG 0099                         _TRISD 0088  
                       _TXREG 0019                         _TXSTA 0098                         pclath 000A  
                       status 0003                         wtemp0 007E               __initialization 000F  
                __end_of_main 006E                        ??_main 0020                        _TRISC6 043E  
                      _TRISC7 043F             __end_of_UART_Init 0084                  __pdataCOMMON 007B  
                      saved_w 007E       __end_of__initialization 0016                __pcstackCOMMON 0070  
__end_of_UART_Transmit_String 0048                    __pmaintext 0048                    __pintentry 0004  
          _UART_Transmit_Char 00A4                _UART_RX_Buffer 007A           ?_UART_Transmit_Char 0070  
                  __stringtab 0084          ??_UART_Transmit_Char 0072                       __ptext1 001A  
                     __ptext2 00A4                       __ptext3 006E                       __ptext4 0094  
        end_of_initialization 0016          _UART_Transmit_String 001A                     _UART_Init 006E  
       ?_UART_Transmit_String 0073                    ?_UART_Init 0070                 __pidataCOMMON 00AF  
         start_initialization 000F                   __end_of_ISR 00A4                   __pbssCOMMON 007A  
                   ___latbits 0002                 __pcstackBANK0 0020        ??_UART_Transmit_String 0075  
                 ??_UART_Init 0072                     __pstrings 0084      UART_Transmit_String@size 0073  
           interrupt_function 0004           UART_Transmit_Char@a 0072                      _PIR1bits 000C  
                 __stringbase 0089            __end_of__stringtab 008A                      intlevel1 0000  
                   stringcode 0084         UART_Transmit_String@a 0077         UART_Transmit_String@i 0078  
                    stringdir 0084                      stringtab 0084  
